openapi: 3.0.3
info:
  title: Product_Inventory_API
  version: v1
paths:
  /api/add_category/:
    post:
      operationId: api_add_category_create
      summary: Create a category
      tags:
      - Category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/add_enterprise/:
    post:
      operationId: api_add_enterprise_create
      summary: Create an enterprise
      tags:
      - Enterprise
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnterpriseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnterpriseRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnterpriseRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise'
          description: ''
  /api/add_product/:
    post:
      operationId: api_add_product_create
      summary: Create a product
      tags:
      - Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/categories/:
    get:
      operationId: api_categories_list
      summary: Get a list of categories
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Category
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
  /api/category/{id}/:
    get:
      operationId: api_category_retrieve
      summary: Retrieve category details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Category
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: api_category_update
      summary: Update category details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: api_category_partial_update
      summary: Partially update category details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: api_category_destroy
      summary: Delete category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Category
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/enterprise/{id}/:
    get:
      operationId: api_enterprise_retrieve
      summary: Retrieve enterprise details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Enterprise
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise'
          description: ''
    put:
      operationId: api_enterprise_update
      summary: Update enterprise details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Enterprise
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnterpriseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnterpriseRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnterpriseRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise'
          description: ''
    patch:
      operationId: api_enterprise_partial_update
      summary: Partially update enterprise details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Enterprise
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEnterpriseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEnterpriseRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEnterpriseRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise'
          description: ''
    delete:
      operationId: api_enterprise_destroy
      summary: Delete enterprise
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Enterprise
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/enterprises/:
    get:
      operationId: api_enterprises_list
      summary: Get a list of enterprises
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Enterprise
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEnterpriseListList'
          description: ''
  /api/product/{id}/:
    get:
      operationId: api_product_retrieve
      summary: Retrieve product details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Product
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: api_product_update
      summary: Update product details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_product_partial_update
      summary: Partially update product details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: api_product_destroy
      summary: Delete product
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Product
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/products/:
    get:
      operationId: api_products_list
      summary: Get a list of products
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Product
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductListList'
          description: ''
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    CategoryRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
      required:
      - name
    Enterprise:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        start_of_workday:
          type: string
          format: time
        end_of_workday:
          type: string
          format: time
        address:
          type: string
          maxLength: 100
      required:
      - address
      - description
      - end_of_workday
      - id
      - name
      - start_of_workday
    EnterpriseList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        work_hours:
          type: string
          readOnly: true
        address:
          type: string
          maxLength: 100
      required:
      - address
      - description
      - id
      - name
      - work_hours
    EnterpriseRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          minLength: 1
        start_of_workday:
          type: string
          format: time
        end_of_workday:
          type: string
          format: time
        address:
          type: string
          minLength: 1
          maxLength: 100
      required:
      - address
      - description
      - end_of_workday
      - name
      - start_of_workday
    PaginatedCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedEnterpriseListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseList'
    PaginatedProductListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductList'
    PatchedCategoryRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
    PatchedEnterpriseRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          minLength: 1
        start_of_workday:
          type: string
          format: time
        end_of_workday:
          type: string
          format: time
        address:
          type: string
          minLength: 1
          maxLength: 100
    PatchedProductRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          minLength: 1
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        stock_quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        category:
          type: integer
        enterprise:
          type: integer
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        stock_quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        category:
          type: integer
        enterprise:
          type: integer
      required:
      - category
      - description
      - enterprise
      - id
      - name
      - price
      - stock_quantity
    ProductList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        stock_quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        category:
          type: string
          readOnly: true
        enterprise:
          type: string
          readOnly: true
      required:
      - category
      - description
      - enterprise
      - id
      - name
      - price
      - stock_quantity
    ProductRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          minLength: 1
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        stock_quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        category:
          type: integer
        enterprise:
          type: integer
      required:
      - category
      - description
      - enterprise
      - name
      - price
      - stock_quantity
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
